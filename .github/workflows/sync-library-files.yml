name: Sync Unity Folders to Main

on:
    push:
        branches:
            - dev
        paths:
            - '.github/workflows/sync-library-files.yml'
            - 'ExampleProject/Assets/Scripts/**'
            - 'ExampleProject/Assets/Resources/**'
            - 'ExampleProject/Assets/Editor/Utils/**'

jobs:
    sync-folders:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout dev branch
              uses: actions/checkout@v4
              with:
                  ref: dev
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0

            - name: Configure Git
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

            - name: Switch to main branch
              run: |
                  git checkout main
                  git pull origin main

            - name: Copy Unity folders from dev
              run: |
                  # Remove existing folders in root if they exist
                  sudo rm -rf Assets/

                  # Copy folders from ExampleProject to root
                  git checkout dev -- ExampleProject/Assets/Scripts/Utils/
                  git checkout dev -- ExampleProject/Assets/Resources/
                  git checkout dev -- ExampleProject/Assets/Editor/Utils/

                  # Move the folders to root
                  if [ -d "ExampleProject/Assets/Scripts/Utils/" ]; then
                    mkdir -p Assets/Scripts/
                    mv ExampleProject/Assets/Scripts/Utils/ Assets/
                  fi

                  if [ -d "ExampleProject/Assets/Resources/" ]; then
                    mkdir -p Assets/Resources/
                    mv ExampleProject/Assets/Resources/ Assets/
                  fi

                  if [ -d "ExampleProject/Assets/Editor/Utils/" ]; then
                    mkdir -p Assets/Editor/Utils/
                    mv ExampleProject/Assets/Editor/Utils/ Assets/
                  fi

                  # Clean up the ExampleProject structure we temporarily created
                  rm -rf ExampleProject/

            - name: Check for changes
              id: check_changes
              run: |
                  if [ -n "$(git status --porcelain)" ]; then
                    echo "changes=true" >> $GITHUB_OUTPUT
                  else
                    echo "changes=false" >> $GITHUB_OUTPUT
                  fi

            - name: Commit and push changes
              if: steps.check_changes.outputs.changes == 'true'
              run: |
                  git add .
                  git commit -m "bot-chore: sync library files from dev"
                  git push origin main

            - name: No changes detected
              if: steps.check_changes.outputs.changes == 'false'
              run: echo "No changes to sync from dev branch"
